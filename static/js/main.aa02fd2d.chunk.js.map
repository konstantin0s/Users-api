{"version":3,"sources":["components/pages/About.js","components/User.js","components/Users.js","components/layout/Header.js","components/AddUser.js","components/OneUser.js","Loading.js","App.js","serviceWorker.js","index.js"],"names":["About","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","className","Component","User","console","log","item","_props$item","id","name","email","react_router_dom","to","concat","alt","src","onClick","delUser","bind","type","Users","_this2","items","map","components_User","key","Header","Fragment","AddUser","onChange","e","_this$setState","setState","defineProperty","target","value","handleSubmit","preventDefault","addUser","onSubmit","placeholder","user","axios","get","then","res","data","_this$state$user","username","website","Loading","Skeleton_default","width","circle","App","delete","toConsumableArray","filter","post","isLoaded","_this3","_this$state","layout_Header","react_router","exact","path","render","components_AddUser","components_Users","request","match","params","OneUser","component","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa02fd2d.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass About extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        return (\n            <div className=\"about\">\n                <h3>This is the Users list app v1.0.0. It is part of\n                    learning React.\n                </h3>\n            </div>\n        );\n    }\n}\n\nexport default About;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst User = (props) => {\n    console.log(props.item);\n    \n    const { id, name, email } = props.item;\n    return (\n    \n                <div className=\"user\" >\n       \n           <Link className=\"linkz\" id={id} to={`/one/${id}`}>\n                    <img  alt=\"user\" src=\"https://picsum.photos/id/1011/200/200\" />\n                    <li>\n                        Name: {name}\n    \n                    </li>\n                    <li>\n                        Email: {email}\n                    </li>\n                    {/* <li>\n                        City: {this.props.item.address.city}\n                    </li>\n                    <li>\n                        Website: {this.props.item.website}\n                    </li>\n                    <li>\n                        Catch Phrase: {this.props.item.company.catchPhrase}\n                    </li> */}\n                    <button onClick={props.delUser.bind(id)} className=\"btn btn-danger\"\n                        type=\"submit\">X</button>\n    \n    <button className=\"btn btn-success\">Check out</button>\n    </Link>\n         \n    \n                </div>\n        \n    \n    );\n  }\n\n\n\n\nexport default User;","import React, { Component } from 'react';\nimport User from './User';\n\nclass Users extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        // console.log(this.props.items);\n        return (\n            <div className=\"flex\">\n\n\n                <ul className=\"item\">\n                    {this.props.items.map(item => (\n\n                        <User key={item.id}\n                            delUser={this.props.delUser}\n                            item={item} />\n                    ))}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default Users;","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nfunction Header() {\n    return (\n        <React.Fragment>\n            <header className=\"header\">\n                <h1 className=\"text-center\">\n                    Users List\n        </h1>\n                <div className=\"links\">\n                    <Link className=\"link\" to=\"/\">Home</Link>\n                    <Link className=\"link\" to=\"/about\">About</Link>\n                </div>\n            </header>\n            <div className=\"footer-bottom \">\n                <div className=\"container\">\n                    <p className=\"pull-left\"> 2020 Copyright Â© Users </p>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n}\n\n\nexport default Header;","import React, { Component } from 'react';\nimport './css/adduser.css';\n\nclass AddUser extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            email: ''\n        };\n    }\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value,\n            [e.target.email]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.addUser(this.state.name, this.state.email);\n        this.setState({ name: '', email: '' });\n    }\n\n    render() {\n        return (\n            <div className=\"add\">\n                <form className=\"form-style-10\" \n                onSubmit={this.handleSubmit}>\n                    <div className=\"form-group\">\n                        <input className=\"form-control\" type=\"text\" name=\"name\"\n                            placeholder=\"Add User...\"\n                            onChange={this.onChange}\n                            value={this.state.name} />\n                        <input type=\"email\" className=\"form-control\" name=\"email\"\n                            placeholder=\"Add Email...\"\n                            onChange={this.onChange}\n                            value={this.state.email} />\n                        <input className=\"btn btn-primary\"\n                            type=\"submit\" value=\"Submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default AddUser;","import React, { Component } from 'react';\nimport './css/oneuser.css';\nimport axios from 'axios';\n\nclass User extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: []\n        };\n    }\n\n    componentDidMount() {\n        axios.get(`https://jsonplaceholder.typicode.com/users/${this.props.id}`)\n            .then(res => res.data)\n            .then(data => {\n                console.log(data);\n                this.setState({\n        \n                    user: data\n            \n                })\n                console.log(this.state.user);\n            })\n        }\n\n    render() {\n\n        console.log(this.props.items);\n\n        console.log(this.state.user);\n        const { id, name, email, username, website } = this.state.user;\n        return (\n      <div className=\"one-user\">\n                  <div className=\"user\" key={id} >\n   \n\n   <img alt=\"user\" src=\"https://picsum.photos/id/1011/200/200\" />\n   <li>\n       Name: {name}\n\n   </li>\n   <li>\n       Email: {email}\n   </li>\n   <li>\n       Username: {username}\n   </li>\n   <li>\n       Website: {website}\n   </li>\n  \n\n</div>\n      </div>\n        );\n    }\n}\n\nexport default User;","import React from 'react';\nimport Skeleton from '@yisheng90/react-loading';\n\nexport default function Loading() {\n    return (\n        <div>\n             <Skeleton width={250} circle />\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport About from './components/pages/About';\nimport './App.css';\nimport axios from 'axios';\nimport Users from './components/Users';\nimport Header from './components/layout/Header';\nimport AddUser from './components/AddUser';\nimport OneUser from './components/OneUser';\nimport Loading from './Loading';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n            isLoaded: false\n        };\n    }\n\n    componentDidMount() {\n        axios.get('https://jsonplaceholder.typicode.com/users')\n            .then(res => res.data)\n            .then(data => {\n                this.setState({\n                    isLoaded: true,\n                    items: data\n                })\n            })\n    }\n\n    delUser = (id) => {\n        axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n            .then(res => this.setState({\n                items: [...this.state.items.filter(item =>\n                    item.id !== id)]\n            }))\n        // console.log(id);\n    }\n\n    //Add User\n    addUser = (name, email) => {\n        axios.post('https://jsonplaceholder.typicode.com/users', {\n            name: name,\n            email: email,\n        })\n            .then(res => this.setState({\n                items: [...this.state.items, res.data]\n            }))\n    }\n\n\n    render() {\n        let { isLoaded, items } = this.state;\n        console.log(items);\n\n        if (!isLoaded) {\n            return (\n           <Loading />\n            )\n        } else {\n            return (\n                <Router>\n                    <div className=\"App\">\n                        <Header />\n                        <Switch>\n                            <Route exact path=\"/\" render={props => (\n                                <div className=\"container\">\n\n                                    <AddUser addUser={this.addUser} />\n                                    <Users items={items}\n                                        delUser={this.delUser} />\n\n                                \n                                </div>\n                            )} />\n                \n\n                        <Route \n        path=\"/one/:id\" \n        render={request => {\n          const id = request.match.params.id;\n          // console.log(id);\n          return <OneUser id={id} />;\n        }}\n      />\n\n</Switch>\n                        <Route exact path=\"/about\" component={About} />\n                    </div>\n                </Router>\n            );\n        }\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}