{"version":3,"sources":["components/pages/About.js","components/User.js","components/Users.js","components/layout/Header.js","components/AddUser.js","App.js","serviceWorker.js","index.js"],"names":["About","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","className","Component","User","console","log","item","_this$props$item","id","name","src","email","onClick","delUser","bind","type","Users","_this2","items","map","components_User","key","Header","Fragment","react_router_dom","to","AddUser","onChange","e","_this$setState","setState","defineProperty","target","value","handleSubmit","preventDefault","addUser","onSubmit","placeholder","App","axios","delete","concat","then","res","toConsumableArray","filter","post","data","isLoaded","get","_this3","_this$state","layout_Header","react_router","exact","path","render","components_AddUser","components_Users","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7d1e67e0.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass About extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        return (\n            <div className=\"about\">\n                <h3>This is the Users list app v1.0.0. It is part of\n                    learning React.\n                </h3>\n            </div>\n        );\n    }\n}\n\nexport default About;","import React, { Component } from 'react'\n\nclass User extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        console.log(this.props.item);\n        const { id, name } = this.props.item;\n        return (\n            <div className=\"user\">\n                <img src=\"https://picsum.photos/id/1011/200/200\" />\n                <li>\n                    Name: {this.props.item.name}\n\n                </li>\n                <li>\n                    Email: {this.props.item.email}\n                </li>\n                {/* <li>\n                    City: {this.props.item.address.city}\n                </li>\n                <li>\n                    Website: {this.props.item.website}\n                </li>\n                <li>\n                    Catch Phrase: {this.props.item.company.catchPhrase}\n                </li> */}\n                <button onClick={this.props.delUser.bind(this, id)} className=\"btn btn-danger\"\n                    type=\"submit\">X</button>\n            </div>\n        );\n    }\n}\n\nexport default User;","import React, { Component } from 'react';\nimport User from './User';\n\nclass Users extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        // console.log(this.props.items);\n        return (\n            <div className=\"flex\">\n\n\n                <ul className=\"item\">\n                    {this.props.items.map(item => (\n\n                        <User key={item.id}\n                            delUser={this.props.delUser}\n                            item={item} />\n                    ))}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default Users;","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nfunction Header() {\n    return (\n        <React.Fragment>\n            <header className=\"header\">\n                <h1 className=\"text-center\">\n                    Users List\n        </h1>\n                <div className=\"links\">\n                    <Link className=\"link\" to=\"/\">Home</Link>\n                    <Link className=\"link\" to=\"/about\">About</Link>\n                </div>\n            </header>\n            <div className=\"footer-bottom \">\n                <div className=\"container\">\n                    <p className=\"pull-left\"> 2019 Copyright Â© Users </p>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n}\n\n\nexport default Header;","import React, { Component } from 'react'\n\nclass AddUser extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            email: ''\n        };\n    }\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value,\n            [e.target.email]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.addUser(this.state.name, this.state.email);\n        this.setState({ name: '', email: '' });\n    }\n\n    render() {\n        return (\n            <div className=\"add\">\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-group\">\n                        <input className=\"form-control\" type=\"text\" name=\"name\"\n                            placeholder=\"Add User...\"\n                            onChange={this.onChange}\n                            value={this.state.name} />\n                        <input type=\"email\" className=\"form-control\" name=\"email\"\n                            placeholder=\"Add Email...\"\n                            onChange={this.onChange}\n                            value={this.state.email} />\n                        <input className=\"btn btn-primary\"\n                            type=\"submit\" value=\"Submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default AddUser;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport About from './components/pages/About';\nimport './App.css';\nimport axios from 'axios';\nimport Users from './components/Users';\nimport Header from './components/layout/Header';\nimport AddUser from './components/AddUser';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n            isLoaded: false\n        };\n    }\n\n    componentDidMount() {\n        axios.get('https://jsonplaceholder.typicode.com/users')\n            .then(res => res.data)\n            .then(data => {\n                this.setState({\n                    isLoaded: true,\n                    items: data\n                })\n            })\n    }\n\n    delUser = (id) => {\n        axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n            .then(res => this.setState({\n                items: [...this.state.items.filter(item =>\n                    item.id !== id)]\n            }))\n        // console.log(id);\n    }\n\n    //Add User\n    addUser = (name, email) => {\n        axios.post('https://jsonplaceholder.typicode.com/users', {\n            name: name,\n            email: email,\n        })\n            .then(res => this.setState({\n                items: [...this.state.items, res.data]\n            }))\n    }\n\n    render() {\n        let { isLoaded, items } = this.state;\n\n        if (!isLoaded) {\n            return (\n                <div className=\"container\">Loading...</div>\n            )\n        } else {\n            return (\n                <Router>\n                    <div className=\"App\">\n                        <Header />\n                        <Switch>\n                            <Route exact path=\"/\" render={props => (\n                                <div className=\"container\">\n\n                                    <AddUser addUser={this.addUser} />\n                                    <Users items={this.state.items}\n                                        delUser={this.delUser} />\n                                </div>\n                            )} />\n                        </Switch>\n                        <Route exact path=\"/about\" component={About} />\n                    </div>\n                </Router>\n            );\n        }\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}